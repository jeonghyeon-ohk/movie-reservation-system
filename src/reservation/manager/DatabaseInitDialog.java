package reservation.manager;
import java.io.*;
import javax.swing.*;
import java.sql.*;

public class DatabaseInitDialog {
    public static void show(Connection conn) {
        boolean success = initialize(conn);

        String message = success ? "데이터베이스 초기화에 성공했습니다." : "데이터베이스 초기화에 실패했습니다.";
        JOptionPane.showMessageDialog(null, message);
    }

    private static boolean initialize(Connection conn) {
        Statement stmt = null;
        try {
            stmt = conn.createStatement();

            stmt.executeUpdate("DROP DATABASE IF EXISTS db1");
            stmt.executeUpdate("CREATE DATABASE db1");
            stmt.executeUpdate("USE db1");

         // movie 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`movie` ("
                    + "  `MovieNumber` INT UNSIGNED NOT NULL,"
                    + "  `MovieName` VARCHAR(25) NOT NULL,"
                    + "  `RunningTime` INT NOT NULL,"
                    + "  `FilmRatings` VARCHAR(20) NULL,"
                    + "  `Director` VARCHAR(20) NULL,"
                    + "  `Actor` VARCHAR(20) NULL,"
                    + "  `Genre` VARCHAR(20) NULL,"
                    + "  `MovieIntroduction` VARCHAR(100) NULL,"
                    + "  `ReleaseDate` DATE NOT NULL,"
                    + "  `MovieRating` INT UNSIGNED NULL,"
                    + "  PRIMARY KEY (`MovieNumber`),"
                    + "  UNIQUE INDEX `MovieNumber_UNIQUE` (`MovieNumber` ASC) VISIBLE,"
                    + "  UNIQUE INDEX `MovieName_UNIQUE` (`MovieName` ASC) VISIBLE)");

            // theater 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`theater` ("
                    + "  `TheaterNumber` INT UNSIGNED NOT NULL,"
                    + "  `NumberOfSeats` INT UNSIGNED NOT NULL,"
                    + "  `TheaterAvailability` TINYINT NOT NULL,"
                    + "  `HorizontalSeat` INT NOT NULL,"
                    + "  `VerticalSeat` INT NOT NULL,"
                    + "  PRIMARY KEY (`TheaterNumber`))");

            // schedule 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`schedule` ("
                    + "  `ScheduleNumber` INT UNSIGNED NOT NULL,"
                    + "  `MovieNumber` INT UNSIGNED NOT NULL,"
                    + "  `TheaterNumber` INT UNSIGNED NOT NULL,"
                    + "  `ScreeningStartDate` DATE NULL DEFAULT NULL,"
                    + "  `ScreeningDayOfWeek` VARCHAR(3) NOT NULL,"
                    + "  `ScreeningRound` INT UNSIGNED NULL DEFAULT NULL,"
                    + "  `ScreeningStartTime` TIME NOT NULL,"
                    + "  PRIMARY KEY (`ScheduleNumber`),"
                    + "  UNIQUE INDEX `ScheduleNumber_UNIQUE` (`ScheduleNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_schedule_movie_idx` (`MovieNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_schedule_theater1_idx` (`TheaterNumber` ASC) VISIBLE,"
                    + "  CONSTRAINT `fk_schedule_movie`"
                    + "    FOREIGN KEY (`MovieNumber`)"
                    + "    REFERENCES `db1`.`movie` (`MovieNumber`),"
                    + "  CONSTRAINT `fk_schedule_theater1`"
                    + "    FOREIGN KEY (`TheaterNumber`)"
                    + "    REFERENCES `db1`.`theater` (`TheaterNumber`))");

            // seat 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`seat` ("
                    + "  `SeatNumber` INT UNSIGNED NOT NULL,"
                    + "  `TheaterNumber` INT UNSIGNED NOT NULL,"
                    + "  `ScheduleNumber` INT UNSIGNED NOT NULL,"
                    + "  `SeatAvailability` TINYINT NOT NULL DEFAULT '0',"
                    + "  INDEX `fk_seat_theater1_idx` (`TheaterNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_seat_schedule1_idx` (`ScheduleNumber` ASC) VISIBLE,"
                    + "  PRIMARY KEY (`SeatNumber`, `TheaterNumber`, `ScheduleNumber`),"
                    + "  CONSTRAINT `fk_seat_theater1`"
                    + "    FOREIGN KEY (`TheaterNumber`)"
                    + "    REFERENCES `db1`.`theater` (`TheaterNumber`),"
                    + "  CONSTRAINT `fk_seat_schedule1`"
                    + "    FOREIGN KEY (`ScheduleNumber`)"
                    + "    REFERENCES `db1`.`schedule` (`ScheduleNumber`))");

            // user 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`user` ("
                    + "  `UserId` VARCHAR(20) NOT NULL,"
                    + "  `UserName` VARCHAR(20) NOT NULL,"
                    + "  `PhoneNumber` CHAR(13) NOT NULL,"
                    + "  `Email` VARCHAR(30) NULL,"
                    + "  PRIMARY KEY (`UserId`),"
                    + "  UNIQUE INDEX `PhoneNumber_UNIQUE` (`PhoneNumber` ASC) VISIBLE,"
                    + "  UNIQUE INDEX `UserId_UNIQUE` (`UserId` ASC) VISIBLE)");

            // reservation 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`reservation` ("
                    + "  `ReservationNumber` INT NOT NULL,"
                    + "  `UserId` VARCHAR(20) NOT NULL,"
                    + "  `PaymentMethod` VARCHAR(20) NOT NULL,"
                    + "  `PaymentStatus` TINYINT NOT NULL DEFAULT '0',"
                    + "  `PaymentAmount` INT UNSIGNED NOT NULL,"
                    + "  `PaymentDate` DATE NOT NULL,"
                    + "  `ScheduleNumber` INT UNSIGNED NOT NULL,"
                    + "  PRIMARY KEY (`ReservationNumber`),"
                    + "  UNIQUE INDEX `ReservationNumber_UNIQUE` (`ReservationNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_reservation_user1_idx` (`UserId` ASC) VISIBLE,"
                    + "  INDEX `fk_reservation_schedule1_idx` (`ScheduleNumber` ASC) VISIBLE,"
                    + "  CONSTRAINT `fk_reservation_user1`"
                    + "    FOREIGN KEY (`UserId`)"
                    + "    REFERENCES `db1`.`user` (`UserId`),"
                    + "  CONSTRAINT `fk_reservation_schedule1`"
                    + "    FOREIGN KEY (`ScheduleNumber`)"
                    + "    REFERENCES `db1`.`schedule` (`ScheduleNumber`)"
                    + "    ON DELETE NO ACTION"
                    + "    ON UPDATE NO ACTION)");

            // ticket 테이블 생성
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS `db1`.`ticket` ("
                    + "  `TicketNumber` INT UNSIGNED NOT NULL,"
                    + "  `ScheduleNumber` INT UNSIGNED NOT NULL,"
                    + "  `IssuanceStatus` TINYINT NOT NULL DEFAULT 0,"
                    + "  `StandardPrice` INT UNSIGNED NULL,"
                    + "  `SellingPrice` INT UNSIGNED NOT NULL,"
                    + "  `SeatNumber` INT UNSIGNED NOT NULL,"
                    + "  `TheaterNumber` INT UNSIGNED NOT NULL,"
                    + "  `ReservationNumber` INT NOT NULL,"
                    + "  PRIMARY KEY (`TicketNumber`, `ReservationNumber`),"
                    + "  UNIQUE INDEX `TicketNumber_UNIQUE` (`TicketNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_ticket_schedule1_idx` (`ScheduleNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_ticket_seat1_idx` (`SeatNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_ticket_theater1_idx` (`TheaterNumber` ASC) VISIBLE,"
                    + "  INDEX `fk_ticket_reservation1_idx` (`ReservationNumber` ASC) VISIBLE,"
                    + "  CONSTRAINT `fk_ticket_schedule1`"
                    + "    FOREIGN KEY (`ScheduleNumber`)"
                    + "    REFERENCES `db1`.`schedule` (`ScheduleNumber`)"
                    + "    ON DELETE NO ACTION"
                    + "    ON UPDATE NO ACTION,"
                    + "  CONSTRAINT `fk_ticket_seat1`"
                    + "    FOREIGN KEY (`SeatNumber`, `TheaterNumber`, `ScheduleNumber`)"
                    + "    REFERENCES `db1`.`seat` (`SeatNumber`, `TheaterNumber`, `ScheduleNumber`)"
                    + "    ON DELETE NO ACTION"
                    + "    ON UPDATE NO ACTION,"
                    + "  CONSTRAINT `fk_ticket_theater1`"
                    + "    FOREIGN KEY (`TheaterNumber`)"
                    + "    REFERENCES `db1`.`theater` (`TheaterNumber`)"
                    + "    ON DELETE NO ACTION"
                    + "    ON UPDATE NO ACTION,"
                    + "  CONSTRAINT `fk_ticket_reservation1`"
                    + "    FOREIGN KEY (`ReservationNumber`)"
                    + "    REFERENCES `db1`.`reservation` (`ReservationNumber`)"
                    + "    ON DELETE NO ACTION"
                    + "    ON UPDATE NO ACTION)");

            stmt.executeUpdate("INSERT INTO `db1`.`user` (`UserId`, `UserName`, `PhoneNumber`, `Email`) VALUES"
            		+ "('apple', '홍길동', '010-1234-5678', 'hong@naver.com'),"
            		+ "('banana', '김철수', '010-2345-6789', 'kim@naver.com'),"
            		+ "('orange', '이영희', '010-3423-7890', 'lee@naver.com'),"
            		+ "('grape', '박민수', '010-4567-8901', 'park@naver.com'),"
            		+ "('strawberry', '정미영', '010-5678-9012', 'jung@naver.com'),"
            		+ "('pineapple', '최영호', '010-6789-0123', 'choi@naver.com'),"
            		+ "('watermelon', '이지은', '010-7890-1234', 'lee2@naver.com'),"
            		+ "('kiwi', '김영훈', '010-8901-2345', 'kim2@naver.com'),"
            		+ "('peach', '장현우', '010-9012-3456', 'jang@naver.com'),"
            		+ "('cherry', '송지혜', '010-0123-4567', 'song@naver.com'),"
            		+ "('melon', '오유진', '010-2345-6729', 'oh@naver.com'),"
            		+ "('blueberry', '강성준', '010-3456-7890', 'kang@naver.com');");

            stmt.executeUpdate("INSERT INTO movie (MovieNumber, MovieName, RunningTime, FilmRatings, Director, Actor, Genre, MovieIntroduction, ReleaseDate, MovieRating) VALUES"
            		+ " (1, '인셉션', 148, '15세 관람가', '크리스토퍼 놀란', '레오나르도 디카프리오', 'SF', '꿈 속으로의 끝없는 여행', '2023-01-16', 9)," 		
            		+ " (2, '어바웃 타임', 123, '12세 관람가', '리처드 커티스', '레이첼 맥아담스', '로맨스', '시간을 되돌리는 특별한 남자', '2023-02-18', 8),"
            		+ " (3, '캐치 미 이프 유 캔', 122, '12세 관람가', '스티븐 스필버그', '레오나르도 디카프리오', '범죄', '거짓말과 위장의 천재인 10대 프랭크와 베테랑 FBI 요원 칼의 자존심을 건 대결', '2023-03-07', 7),"
            		+ " (4, '다크 나이트', 152, '15세 관람가', '크리스토퍼 놀란', '크리스찬 베일', '액션', '배트맨의 최대 위기, 조커의 등장', '2023-04-15', 8),"
            		+ " (5, '어벤져스: 엔드게임', 181, '12세 관람가', '안소니 루소', '로버트 다우니 주니어', '액션', '히어로들의 최후의 전투', '2023-05-16', 9),"
            		+ "	(6, '겨울왕국 2', 103, '전체 관람가', '크리스 벅', '크리스틴 벨', '애니메이션', '엘사의 새로운 모험', '2023-06-17', 8),"
            		+ "	(7, '마녀', 123, '15세 관람가', '박훈정', '김다미', '스릴러', '마녀로 변한 소녀의 이야기', '2023-07-18', 8),"
            		+ "	(8, '신과함께: 인과 연', 141, '12세 관람가', '김용화', '하정우', '판타지', '죽음 후 첫 사건 해결의 이야기', '2023-08-19', 7),"
            		+ "	(9, '스파이더맨: 파 프롬 홈', 129, '12세 관람가', '존 왓츠', '톰 홀랜드', '액션', '피터 파커의 뉴욕 홈커밍', '2023-09-20', 7),"
            		+ "	(10, '캡틴 마블', 123, '12세 관람가', '애너 보든', '브리 라슨', '액션', '히어로인의 강력한 힘', '2023-10-21', 8),"
            		+ "	(11, '조커', 122, '15세 관람가', '토드 필립스', '호아킨 피닉스', '스릴러', '광기의 한 남자', '2023-11-22', 9),"
            		+ "	(12, '나쁜 녀석들: 더 무비', 123, '15세 관람가', '손용호', '김상중', '액션', '강력 범죄조직의 말과 총격전', '2023-12-23', 8);");

            stmt.executeUpdate("INSERT INTO theater (TheaterNumber, NumberOfSeats, TheaterAvailability, HorizontalSeat, VerticalSeat) VALUES"
            		+ "(1, 25, FALSE, 5, 5),"
            		+ "(2, 25, FALSE, 5, 5),"
            		+ "(3, 25, FALSE, 5, 5),"
            		+ "(4, 25, FALSE, 5, 5),"
            		+ "(5, 25, FALSE, 5, 5),"
            		+ "(6, 25, FALSE, 5, 5),"
            		+ "(7, 25, FALSE, 5, 5),"
            		+ "(8, 25, FALSE, 5, 5),"
            		+ "(9, 25, FALSE, 5, 5),"
            		+ "(10, 25, FALSE, 5, 5),"
            		+ "(11, 25, FALSE, 5, 5),"
            		+ "(12, 25, FALSE, 5, 5);");
            
            stmt.executeUpdate("INSERT INTO schedule (ScheduleNumber, MovieNumber, TheaterNumber, ScreeningStartDate, ScreeningDayOfWeek, ScreeningRound, ScreeningStartTime) VALUES"
            	    + "(1, 1, 6, '2024-01-18', '수', 1, '16:00:00'), (2, 1, 7, '2024-01-19', '목', 2, '17:00:00'), (3, 1, 8, '2024-01-20', '금', 3, '18:00:00'),"
            	    + "(4, 2, 9, '2024-02-21', '화', 1, '14:00:00'), (5, 2, 10, '2024-02-22', '수', 2, '15:00:00'), (6, 2, 11, '2024-02-23', '목', 3, '16:00:00'),"
            	    + "(7, 3, 12, '2024-03-24', '금', 1, '12:00:00'), (8, 3, 1, '2024-03-25', '토', 2, '13:00:00'), (9, 3, 2, '2024-03-26', '일', 3, '14:00:00'),"
            	    + "(10, 4, 3, '2024-04-27', '수', 1, '16:00:00'), (11, 4, 4, '2024-04-28', '목', 2, '17:00:00'), (12, 4, 5, '2024-04-29', '금', 3, '18:00:00'),"
            	    + "(13, 5, 6, '2024-05-30', '월', 1, '14:00:00'), (14, 5, 7, '2024-05-31', '화', 2, '15:00:00'), (15, 5, 8, '2024-06-01', '수', 3, '16:00:00'),"
            	    + "(16, 6, 9, '2024-06-17', '목', 1, '14:00:00'), (17, 6, 10, '2024-06-18', '금', 2, '15:00:00'), (18, 6, 11, '2024-06-19', '토', 3, '16:00:00'),"
            	    + "(19, 7, 12, '2024-07-20', '월', 1, '12:00:00'), (20, 7, 1, '2024-07-21', '화', 2, '13:00:00'), (21, 7, 2, '2024-07-22', '수', 3, '14:00:00'),"
            	    + "(22, 8, 3, '2024-08-21', '목', 1, '16:00:00'), (23, 8, 4, '2024-08-22', '금', 2, '17:00:00'), (24, 8, 5, '2024-08-23', '토', 3, '18:00:00'),"
            	    + "(25, 9, 6, '2024-09-23', '월', 1, '14:00:00'), (26, 9, 7, '2024-09-24', '화', 2, '15:00:00'), (27, 9, 8, '2024-09-25', '수', 3, '16:00:00'),"
            	    + "(28, 10, 9, '2024-10-25', '목', 1, '12:00:00'), (29, 10, 10, '2024-10-26', '금', 2, '13:00:00'), (30, 10, 11, '2024-10-27', '토', 3, '14:00:00'),"
            	    + "(31, 11, 12, '2024-11-23', '일', 1, '16:00:00'), (32, 11, 1, '2024-11-24', '월', 2, '17:00:00'), (33, 11, 2, '2024-11-25', '화', 3, '18:00:00'),"
            	    + "(34, 12, 3, '2024-12-25', '수', 1, '14:00:00'), (35, 12, 4, '2024-12-26', '목', 2, '15:00:00'), (36, 12, 5, '2024-12-27', '금', 3, '16:00:00');");
            
            stmt.executeUpdate("INSERT INTO seat (SeatNumber, TheaterNumber, ScheduleNumber, SeatAvailability) VALUES"
            	    + "(1, 6, 1, 0), (2, 6, 1, 0), (3, 6, 1, 0), (4, 6, 1, 0), (5, 6, 1, 0),"
            	    + "(6, 6, 1, 0), (7, 6, 1, 0), (8, 6, 1, 0), (9, 6, 1, 0), (10, 6, 1, 0),"
            	    + "(11, 6, 1, 0), (12, 6, 1, 0), (13, 6, 1, 0), (14, 6, 1, 0), (15, 6, 1, 0),"
            	    + "(16, 6, 1, 0), (17, 6, 1, 0), (18, 6, 1, 0), (19, 6, 1, 0), (20, 6, 1, 0),"
            	    + "(21, 6, 1, 0), (22, 6, 1, 0), (23, 6, 1, 0), (24, 6, 1, 0), (25, 6, 1, 0),"
            	    
            	    + "(1, 7, 2, 0), (2, 7, 2, 0), (3, 7, 2, 0), (4, 7, 2, 0), (5, 7, 2, 0),"
            	    + "(6, 7, 2, 0), (7, 7, 2, 0), (8, 7, 2, 0), (9, 7, 2, 0), (10, 7, 2, 0),"
            	    + "(11, 7, 2, 0), (12, 7, 2, 0), (13, 7, 2, 0), (14, 7, 2, 0), (15, 7, 2, 0),"
            	    + "(16, 7, 2, 0), (17, 7, 2, 0), (18, 7, 2, 0), (19, 7, 2, 0), (20, 7, 2, 0),"
            	    + "(21, 7, 2, 0), (22, 7, 2, 0), (23, 7, 2, 0), (24, 7, 2, 0), (25, 7, 2, 0),"

            	    + "(1, 8, 3, 0), (2, 8, 3, 0), (3, 8, 3, 0), (4, 8, 3, 0), (5, 8, 3, 0),"
            	    + "(6, 8, 3, 0), (7, 8, 3, 0), (8, 8, 3, 0), (9, 8, 3, 0), (10, 8, 3, 0),"
            	    + "(11, 8, 3, 0), (12, 8, 3, 0), (13, 8, 3, 0), (14, 8, 3, 0), (15, 8, 3, 0),"
            	    + "(16, 8, 3, 0), (17, 8, 3, 0), (18, 8, 3, 0), (19, 8, 3, 0), (20, 8, 3, 0),"
            	    + "(21, 8, 3, 0), (22, 8, 3, 0), (23, 8, 3, 0), (24, 8, 3, 0), (25, 8, 3, 0),"

            	    + "(1, 9, 4, 0), (2, 9, 4, 0), (3, 9, 4, 0), (4, 9, 4, 0), (5, 9, 4, 0),"
            	    + "(6, 9, 4, 0), (7, 9, 4, 0), (8, 9, 4, 0), (9, 9, 4, 0), (10, 9, 4, 0),"
            	    + "(11, 9, 4, 0), (12, 9, 4, 0), (13, 9, 4, 0), (14, 9, 4, 0), (15, 9, 4, 0),"
            	    + "(16, 9, 4, 0), (17, 9, 4, 0), (18, 9, 4, 0), (19, 9, 4, 0), (20, 9, 4, 0),"
            	    + "(21, 9, 4, 0), (22, 9, 4, 0), (23, 9, 4, 0), (24, 9, 4, 0), (25, 9, 4, 0),"

            	    + "(1, 10, 5, 0), (2, 10, 5, 0), (3, 10, 5, 0), (4, 10, 5, 0), (5, 10, 5, 0),"
            	    + "(6, 10, 5, 0), (7, 10, 5, 0), (8, 10, 5, 0), (9, 10, 5, 0), (10, 10, 5, 0),"
            	    + "(11, 10, 5, 0), (12, 10, 5, 0), (13, 10, 5, 0), (14, 10, 5, 0), (15, 10, 5, 0),"
            	    + "(16, 10, 5, 0), (17, 10, 5, 0), (18, 10, 5, 0), (19, 10, 5, 0), (20, 10, 5, 0),"
            	    + "(21, 10, 5, 0), (22, 10, 5, 0), (23, 10, 5, 0), (24, 10, 5, 0), (25, 10, 5, 0),"

            	    + "(1, 11, 6, 0), (2, 11, 6, 0), (3, 11, 6, 0), (4, 11, 6, 0), (5, 11, 6, 0),"
            	    + "(6, 11, 6, 0), (7, 11, 6, 0), (8, 11, 6, 0), (9, 11, 6, 0), (10, 11, 6, 0),"
            	    + "(11, 11, 6, 0), (12, 11, 6, 0), (13, 11, 6, 0), (14, 11, 6, 0), (15, 11, 6, 0),"
            	    + "(16, 11, 6, 0), (17, 11, 6, 0), (18, 11, 6, 0), (19, 11, 6, 0), (20, 11, 6, 0),"
            	    + "(21, 11, 6, 0), (22, 11, 6, 0), (23, 11, 6, 0), (24, 11, 6, 0), (25, 11, 6, 0),"

            	    + "(1, 12, 7, 0), (2, 12, 7, 0), (3, 12, 7, 0), (4, 12, 7, 0), (5, 12, 7, 0),"
            	    + "(6, 12, 7, 0), (7, 12, 7, 0), (8, 12, 7, 0), (9, 12, 7, 0), (10, 12, 7, 0),"
            	    + "(11, 12, 7, 0), (12, 12, 7, 0), (13, 12, 7, 0), (14, 12, 7, 0), (15, 12, 7, 0),"
            	    + "(16, 12, 7, 0), (17, 12, 7, 0), (18, 12, 7, 0), (19, 12, 7, 0), (20, 12, 7, 0),"
            	    + "(21, 12, 7, 0), (22, 12, 7, 0), (23, 12, 7, 0), (24, 12, 7, 0), (25, 12, 7, 0),"

            	    + "(1, 1, 8, 0), (2, 1, 8, 0), (3, 1, 8, 0), (4, 1, 8, 0), (5, 1, 8, 0),"
            	    + "(6, 1, 8, 0), (7, 1, 8, 0), (8, 1, 8, 0), (9, 1, 8, 0), (10, 1, 8, 0),"
            	    + "(11, 1, 8, 0), (12, 1, 8, 0), (13, 1, 8, 0), (14, 1, 8, 0), (15, 1, 8, 0),"
            	    + "(16, 1, 8, 0), (17, 1, 8, 0), (18, 1, 8, 0), (19, 1, 8, 0), (20, 1, 8, 0),"
            	    + "(21, 1, 8, 0), (22, 1, 8, 0), (23, 1, 8, 0), (24, 1, 8, 0), (25, 1, 8, 0),"

            	    + "(1, 2, 9, 0), (2, 2, 9, 0), (3, 2, 9, 0), (4, 2, 9, 0), (5, 2, 9, 0),"
            	    + "(6, 2, 9, 0), (7, 2, 9, 0), (8, 2, 9, 0), (9, 2, 9, 0), (10, 2, 9, 0),"
            	    + "(11, 2, 9, 0), (12, 2, 9, 0), (13, 2, 9, 0), (14, 2, 9, 0), (15, 2, 9, 0),"
            	    + "(16, 2, 9, 0), (17, 2, 9, 0), (18, 2, 9, 0), (19, 2, 9, 0), (20, 2, 9, 0),"
            	    + "(21, 2, 9, 0), (22, 2, 9, 0), (23, 2, 9, 0), (24, 2, 9, 0), (25, 2, 9, 0),"

            	    + "(1, 3, 10, 0), (2, 3, 10, 0), (3, 3, 10, 0), (4, 3, 10, 0), (5, 3, 10, 0),"
            	    + "(6, 3, 10, 0), (7, 3, 10, 0), (8, 3, 10, 0), (9, 3, 10, 0), (10, 3, 10, 0),"
            	    + "(11, 3, 10, 0), (12, 3, 10, 0), (13, 3, 10, 0), (14, 3, 10, 0), (15, 3, 10, 0),"
            	    + "(16, 3, 10, 0), (17, 3, 10, 0), (18, 3, 10, 0), (19, 3, 10, 0), (20, 3, 10, 0),"
            	    + "(21, 3, 10, 0), (22, 3, 10, 0), (23, 3, 10, 0), (24, 3, 10, 0), (25, 3, 10, 0),"            	    
            	    
            	    + "(1, 4, 11, 0), (2, 4, 11, 0), (3, 4, 11, 0), (4, 4, 11, 0), (5, 4, 11, 0),"
            	    + "(6, 4, 11, 0), (7, 4, 11, 0), (8, 4, 11, 0), (9, 4, 11, 0), (10, 4, 11, 0),"
            	    + "(11, 4, 11, 0), (12, 4, 11, 0), (13, 4, 11, 0), (14, 4, 11, 0), (15, 4, 11, 0),"
            	    + "(16, 4, 11, 0), (17, 4, 11, 0), (18, 4, 11, 0), (19, 4, 11, 0), (20, 4, 11, 0),"
            	    + "(21, 4, 11, 0), (22, 4, 11, 0), (23, 4, 11, 0), (24, 4, 11, 0), (25, 4, 11, 0),"
            	    
            	    + "(1, 5, 12, 0), (2, 5, 12, 0), (3, 5, 12, 0), (4, 5, 12, 0), (5, 5, 12, 0),"
            	    + "(6, 5, 12, 0), (7, 5, 12, 0), (8, 5, 12, 0), (9, 5, 12, 0), (10, 5, 12, 0),"
            	    + "(11, 5, 12, 0), (12, 5, 12, 0), (13, 5, 12, 0), (14, 5, 12, 0), (15, 5, 12, 0),"
            	    + "(16, 5, 12, 0), (17, 5, 12, 0), (18, 5, 12, 0), (19, 5, 12, 0), (20, 5, 12, 0),"
            	    + "(21, 5, 12, 0), (22, 5, 12, 0), (23, 5, 12, 0), (24, 5, 12, 0), (25, 5, 12, 0),"
            	    
            	    + "(1, 6, 13, 0), (2, 6, 13, 0), (3, 6, 13, 0), (4, 6, 13, 0), (5, 6, 13, 0),"
            	    + "(6, 6, 13, 0), (7, 6, 13, 0), (8, 6, 13, 0), (9, 6, 13, 0), (10, 6, 13, 0),"
            	    + "(11, 6, 13, 0), (12, 6, 13, 0), (13, 6, 13, 0), (14, 6, 13, 0), (15, 6, 13, 0),"
            	    + "(16, 6, 13, 0), (17, 6, 13, 0), (18, 6, 13, 0), (19, 6, 13, 0), (20, 6, 13, 0),"
            	    + "(21, 6, 13, 0), (22, 6, 13, 0), (23, 6, 13, 0), (24, 6, 13, 0), (25, 6, 13, 0),"
            	    
            	    + "(1, 7, 14, 0), (2, 7, 14, 0), (3, 7, 14, 0), (4, 7, 14, 0), (5, 7, 14, 0),"
            	    + "(6, 7, 14, 0), (7, 7, 14, 0), (8, 7, 14, 0), (9, 7, 14, 0), (10, 7, 14, 0),"
            	    + "(11, 7, 14, 0), (12, 7, 14, 0), (13, 7, 14, 0), (14, 7, 14, 0), (15, 7, 14, 0),"
            	    + "(16, 7, 14, 0), (17, 7, 14, 0), (18, 7, 14, 0), (19, 7, 14, 0), (20, 7, 14, 0),"
            	    + "(21, 7, 14, 0), (22, 7, 14, 0), (23, 7, 14, 0), (24, 7, 14, 0), (25, 7, 14, 0),"

            	    + "(1, 8, 15, 0), (2, 8, 15, 0), (3, 8, 15, 0), (4, 8, 15, 0), (5, 8, 15, 0),"
            	    + "(6, 8, 15, 0), (7, 8, 15, 0), (8, 8, 15, 0), (9, 8, 15, 0), (10, 8, 15, 0),"
            	    + "(11, 8, 15, 0), (12, 8, 15, 0), (13, 8, 15, 0), (14, 8, 15, 0), (15, 8, 15, 0),"
            	    + "(16, 8, 15, 0), (17, 8, 15, 0), (18, 8, 15, 0), (19, 8, 15, 0), (20, 8, 15, 0),"
            	    + "(21, 8, 15, 0), (22, 8, 15, 0), (23, 8, 15, 0), (24, 8, 15, 0), (25, 8, 15, 0),"

            	    + "(1, 9, 16, 0), (2, 9, 16, 0), (3, 9, 16, 0), (4, 9, 16, 0), (5, 9, 16, 0),"
            	    + "(6, 9, 16, 0), (7, 9, 16, 0), (8, 9, 16, 0), (9, 9, 16, 0), (10, 9, 16, 0),"
            	    + "(11, 9, 16, 0), (12, 9, 16, 0), (13, 9, 16, 0), (14, 9, 16, 0), (15, 9, 16, 0),"
            	    + "(16, 9, 16, 0), (17, 9, 16, 0), (18, 9, 16, 0), (19, 9, 16, 0), (20, 9, 16, 0),"
            	    + "(21, 9, 16, 0), (22, 9, 16, 0), (23, 9, 16, 0), (24, 9, 16, 0), (25, 9, 16, 0),"

            	    + "(1, 10, 17, 0), (2, 10, 17, 0), (3, 10, 17, 0), (4, 10, 17, 0), (5, 10, 17, 0),"
            	    + "(6, 10, 17, 0), (7, 10, 17, 0), (8, 10, 17, 0), (9, 10, 17, 0), (10, 10, 17, 0),"
            	    + "(11, 10, 17, 0), (12, 10, 17, 0), (13, 10, 17, 0), (14, 10, 17, 0), (15, 10, 17, 0),"
            	    + "(16, 10, 17, 0), (17, 10, 17, 0), (18, 10, 17, 0), (19, 10, 17, 0), (20, 10, 17, 0),"
            	    + "(21, 10, 17, 0), (22, 10, 17, 0), (23, 10, 17, 0), (24, 10, 17, 0), (25, 10, 17, 0),"

            	    + "(1, 11, 18, 0), (2, 11, 18, 0), (3, 11, 18, 0), (4, 11, 18, 0), (5, 11, 18, 0),"
            	    + "(6, 11, 18, 0), (7, 11, 18, 0), (8, 11, 18, 0), (9, 11, 18, 0), (10, 11, 18, 0),"
            	    + "(11, 11, 18, 0), (12, 11, 18, 0), (13, 11, 18, 0), (14, 11, 18, 0), (15, 11, 18, 0),"
            	    + "(16, 11, 18, 0), (17, 11, 18, 0), (18, 11, 18, 0), (19, 11, 18, 0), (20, 11, 18, 0),"
            	    + "(21, 11, 18, 0), (22, 11, 18, 0), (23, 11, 18, 0), (24, 11, 18, 0), (25, 11, 18, 0),"

            	    + "(1, 12, 19, 0), (2, 12, 19, 0), (3, 12, 19, 0), (4, 12, 19, 0), (5, 12, 19, 0),"
            	    + "(6, 12, 19, 0), (7, 12, 19, 0), (8, 12, 19, 0), (9, 12, 19, 0), (10, 12, 19, 0),"
            	    + "(11, 12, 19, 0), (12, 12, 19, 0), (13, 12, 19, 0), (14, 12, 19, 0), (15, 12, 19, 0),"
            	    + "(16, 12, 19, 0), (17, 12, 19, 0), (18, 12, 19, 0), (19, 12, 19, 0), (20, 12, 19, 0),"
            	    + "(21, 12, 19, 0), (22, 12, 19, 0), (23, 12, 19, 0), (24, 12, 19, 0), (25, 12, 19, 0),"
            
            	    + "(1, 1, 20, 0), (2, 1, 20, 0), (3, 1, 20, 0), (4, 1, 20, 0), (5, 1, 20, 0),"
            	    + "(6, 1, 20, 0), (7, 1, 20, 0), (8, 1, 20, 0), (9, 1, 20, 0), (10, 1, 20, 0),"
            	    + "(11, 1, 20, 0), (12, 1, 20, 0), (13, 1, 20, 0), (14, 1, 20, 0), (15, 1, 20, 0),"
            	    + "(16, 1, 20, 0), (17, 1, 20, 0), (18, 1, 20, 0), (19, 1, 20, 0), (20, 1, 20, 0),"
            	    + "(21, 1, 20, 0), (22, 1, 20, 0), (23, 1, 20, 0), (24, 1, 20, 0), (25, 1, 20, 0),"

            	    + "(1, 2, 21, 0), (2, 2, 21, 0), (3, 2, 21, 0), (4, 2, 21, 0), (5, 2, 21, 0),"
            	    + "(6, 2, 21, 0), (7, 2, 21, 0), (8, 2, 21, 0), (9, 2, 21, 0), (10, 2, 21, 0),"
            	    + "(11, 2, 21, 0), (12, 2, 21, 0), (13, 2, 21, 0), (14, 2, 21, 0), (15, 2, 21, 0),"
            	    + "(16, 2, 21, 0), (17, 2, 21, 0), (18, 2, 21, 0), (19, 2, 21, 0), (20, 2, 21, 0),"
            	    + "(21, 2, 21, 0), (22, 2, 21, 0), (23, 2, 21, 0), (24, 2, 21, 0), (25, 2, 21, 0),"

            	    + "(1, 3, 22, 0), (2, 3, 22, 0), (3, 3, 22, 0), (4, 3, 22, 0), (5, 3, 22, 0),"
            	    + "(6, 3, 22, 0), (7, 3, 22, 0), (8, 3, 22, 0), (9, 3, 22, 0), (10, 3, 22, 0),"
            	    + "(11, 3, 22, 0), (12, 3, 22, 0), (13, 3, 22, 0), (14, 3, 22, 0), (15, 3, 22, 0),"
            	    + "(16, 3, 22, 0), (17, 3, 22, 0), (18, 3, 22, 0), (19, 3, 22, 0), (20, 3, 22, 0),"
            	    + "(21, 3, 22, 0), (22, 3, 22, 0), (23, 3, 22, 0), (24, 3, 22, 0), (25, 3, 22, 0),"

            	    + "(1, 4, 23, 0), (2, 4, 23, 0), (3, 4, 23, 0), (4, 4, 23, 0), (5, 4, 23, 0),"
            	    + "(6, 4, 23, 0), (7, 4, 23, 0), (8, 4, 23, 0), (9, 4, 23, 0), (10, 4, 23, 0),"
            	    + "(11, 4, 23, 0), (12, 4, 23, 0), (13, 4, 23, 0), (14, 4, 23, 0), (15, 4, 23, 0),"
            	    + "(16, 4, 23, 0), (17, 4, 23, 0), (18, 4, 23, 0), (19, 4, 23, 0), (20, 4, 23, 0),"
            	    + "(21, 4, 23, 0), (22, 4, 23, 0), (23, 4, 23, 0), (24, 4, 23, 0), (25, 4, 23, 0),"

            	    + "(1, 5, 24, 0), (2, 5, 24, 0), (3, 5, 24, 0), (4, 5, 24, 0), (5, 5, 24, 0),"
            	    + "(6, 5, 24, 0), (7, 5, 24, 0), (8, 5, 24, 0), (9, 5, 24, 0), (10, 5, 24, 0),"
            	    + "(11, 5, 24, 0), (12, 5, 24, 0), (13, 5, 24, 0), (14, 5, 24, 0), (15, 5, 24, 0),"
            	    + "(16, 5, 24, 0), (17, 5, 24, 0), (18, 5, 24, 0), (19, 5, 24, 0), (20, 5, 24, 0),"
            	    + "(21, 5, 24, 0), (22, 5, 24, 0), (23, 5, 24, 0), (24, 5, 24, 0), (25, 5, 24, 0),"

            	    + "(1, 6, 25, 0), (2, 6, 25, 0), (3, 6, 25, 0), (4, 6, 25, 0), (5, 6, 25, 0),"
            	    + "(6, 6, 25, 0), (7, 6, 25, 0), (8, 6, 25, 0), (9, 6, 25, 0), (10, 6, 25, 0),"
            	    + "(11, 6, 25, 0), (12, 6, 25, 0), (13, 6, 25, 0), (14, 6, 25, 0), (15, 6, 25, 0),"
            	    + "(16, 6, 25, 0), (17, 6, 25, 0), (18, 6, 25, 0), (19, 6, 25, 0), (20, 6, 25, 0),"
            	    + "(21, 6, 25, 0), (22, 6, 25, 0), (23, 6, 25, 0), (24, 6, 25, 0), (25, 6, 25, 0),"

            	    + "(1, 7, 26, 0), (2, 7, 26, 0), (3, 7, 26, 0), (4, 7, 26, 0), (5, 7, 26, 0),"
            	    + "(6, 7, 26, 0), (7, 7, 26, 0), (8, 7, 26, 0), (9, 7, 26, 0), (10, 7, 26, 0),"
            	    + "(11, 7, 26, 0), (12, 7, 26, 0), (13, 7, 26, 0), (14, 7, 26, 0), (15, 7, 26, 0),"
            	    + "(16, 7, 26, 0), (17, 7, 26, 0), (18, 7, 26, 0), (19, 7, 26, 0), (20, 7, 26, 0),"
            	    + "(21, 7, 26, 0), (22, 7, 26, 0), (23, 7, 26, 0), (24, 7, 26, 0), (25, 7, 26, 0),"

            	    + "(1, 8, 27, 0), (2, 8, 27, 0), (3, 8, 27, 0), (4, 8, 27, 0), (5, 8, 27, 0),"
            	    + "(6, 8, 27, 0), (7, 8, 27, 0), (8, 8, 27, 0), (9, 8, 27, 0), (10, 8, 27, 0),"
            	    + "(11, 8, 27, 0), (12, 8, 27, 0), (13, 8, 27, 0), (14, 8, 27, 0), (15, 8, 27, 0),"
            	    + "(16, 8, 27, 0), (17, 8, 27, 0), (18, 8, 27, 0), (19, 8, 27, 0), (20, 8, 27, 0),"
            	    + "(21, 8, 27, 0), (22, 8, 27, 0), (23, 8, 27, 0), (24, 8, 27, 0), (25, 8, 27, 0),"

            	    + "(1, 9, 28, 0), (2, 9, 28, 0), (3, 9, 28, 0), (4, 9, 28, 0), (5, 9, 28, 0),"
            	    + "(6, 9, 28, 0), (7, 9, 28, 0), (8, 9, 28, 0), (9, 9, 28, 0), (10, 9, 28, 0),"
            	    + "(11, 9, 28, 0), (12, 9, 28, 0), (13, 9, 28, 0), (14, 9, 28, 0), (15, 9, 28, 0),"
            	    + "(16, 9, 28, 0), (17, 9, 28, 0), (18, 9, 28, 0), (19, 9, 28, 0), (20, 9, 28, 0),"
            	    + "(21, 9, 28, 0), (22, 9, 28, 0), (23, 9, 28, 0), (24, 9, 28, 0), (25, 9, 28, 0),"

            	    + "(1, 10, 29, 0), (2, 10, 29, 0), (3, 10, 29, 0), (4, 10, 29, 0), (5, 10, 29, 0),"
            	    + "(6, 10, 29, 0), (7, 10, 29, 0), (8, 10, 29, 0), (9, 10, 29, 0), (10, 10, 29, 0),"
            	    + "(11, 10, 29, 0), (12, 10, 29, 0), (13, 10, 29, 0), (14, 10, 29, 0), (15, 10, 29, 0),"
            	    + "(16, 10, 29, 0), (17, 10, 29, 0), (18, 10, 29, 0), (19, 10, 29, 0), (20, 10, 29, 0),"
            	    + "(21, 10, 29, 0), (22, 10, 29, 0), (23, 10, 29, 0), (24, 10, 29, 0), (25, 10, 29, 0),"

            	    + "(1, 11, 30, 0), (2, 11, 30, 0), (3, 11, 30, 0), (4, 11, 30, 0), (5, 11, 30, 0),"
            	    + "(6, 11, 30, 0), (7, 11, 30, 0), (8, 11, 30, 0), (9, 11, 30, 0), (10, 11, 30, 0),"
            	    + "(11, 11, 30, 0), (12, 11, 30, 0), (13, 11, 30, 0), (14, 11, 30, 0), (15, 11, 30, 0),"
            	    + "(16, 11, 30, 0), (17, 11, 30, 0), (18, 11, 30, 0), (19, 11, 30, 0), (20, 11, 30, 0),"
            	    + "(21, 11, 30, 0), (22, 11, 30, 0), (23, 11, 30, 0), (24, 11, 30, 0), (25, 11, 30, 0),"
            	    
            	    + "(1, 12, 31, 0), (2, 12, 31, 0), (3, 12, 31, 0), (4, 12, 31, 0), (5, 12, 31, 0),"
            	    + "(6, 12, 31, 0), (7, 12, 31, 0), (8, 12, 31, 0), (9, 12, 31, 0), (10, 12, 31, 0),"
            	    + "(11, 12, 31, 0), (12, 12, 31, 0), (13, 12, 31, 0), (14, 12, 31, 0), (15, 12, 31, 0),"
            	    + "(16, 12, 31, 0), (17, 12, 31, 0), (18, 12, 31, 0), (19, 12, 31, 0), (20, 12, 31, 0),"
            	    + "(21, 12, 31, 0), (22, 12, 31, 0), (23, 12, 31, 0), (24, 12, 31, 0), (25, 12, 31, 0),"
            
            	    + "(1, 1, 32, 0), (2, 1, 32, 0), (3, 1, 32, 0), (4, 1, 32, 0), (5, 1, 32, 0),"
            	    + "(6, 1, 32, 0), (7, 1, 32, 0), (8, 1, 32, 0), (9, 1, 32, 0), (10, 1, 32, 0),"
            	    + "(11, 1, 32, 0), (12, 1, 32, 0), (13, 1, 32, 0), (14, 1, 32, 0), (15, 1, 32, 0),"
            	    + "(16, 1, 32, 0), (17, 1, 32, 0), (18, 1, 32, 0), (19, 1, 32, 0), (20, 1, 32, 0),"
            	    + "(21, 1, 32, 0), (22, 1, 32, 0), (23, 1, 32, 0), (24, 1, 32, 0), (25, 1, 32, 0),"
            	    
            	    + "(1, 2, 33, 0), (2, 2, 33, 0), (3, 2, 33, 0), (4, 2, 33, 0), (5, 2, 33, 0),"
            	    + "(6, 2, 33, 0), (7, 2, 33, 0), (8, 2, 33, 0), (9, 2, 33, 0), (10, 2, 33, 0),"
            	    + "(11, 2, 33, 0), (12, 2, 33, 0), (13, 2, 33, 0), (14, 2, 33, 0), (15, 2, 33, 0),"
            	    + "(16, 2, 33, 0), (17, 2, 33, 0), (18, 2, 33, 0), (19, 2, 33, 0), (20, 2, 33, 0),"
            	    + "(21, 2, 33, 0), (22, 2, 33, 0), (23, 2, 33, 0), (24, 2, 33, 0), (25, 2, 33, 0),"
            	    
            	    + "(1, 3, 34, 0), (2, 3, 34, 0), (3, 3, 34, 0), (4, 3, 34, 0), (5, 3, 34, 0),"
            	    + "(6, 3, 34, 0), (7, 3, 34, 0), (8, 3, 34, 0), (9, 3, 34, 0), (10, 3, 34, 0),"
            	    + "(11, 3, 34, 0), (12, 3, 34, 0), (13, 3, 34, 0), (14, 3, 34, 0), (15, 3, 34, 0),"
            	    + "(16, 3, 34, 0), (17, 3, 34, 0), (18, 3, 34, 0), (19, 3, 34, 0), (20, 3, 34, 0),"
            	    + "(21, 3, 34, 0), (22, 3, 34, 0), (23, 3, 34, 0), (24, 3, 34, 0), (25, 3, 34, 0),"
            	    
            	    + "(1, 4, 35, 0), (2, 4, 35, 0), (3, 4, 35, 0), (4, 4, 35, 0), (5, 4, 35, 0),"
            	    + "(6, 4, 35, 0), (7, 4, 35, 0), (8, 4, 35, 0), (9, 4, 35, 0), (10, 4, 35, 0),"
            	    + "(11, 4, 35, 0), (12, 4, 35, 0), (13, 4, 35, 0), (14, 4, 35, 0), (15, 4, 35, 0),"
            	    + "(16, 4, 35, 0), (17, 4, 35, 0), (18, 4, 35, 0), (19, 4, 35, 0), (20, 4, 35, 0),"
            	    + "(21, 4, 35, 0), (22, 4, 35, 0), (23, 4, 35, 0), (24, 4, 35, 0), (25, 4, 35, 0),"  
            	    
            	    + "(1, 5, 36, 0), (2, 5, 36, 0), (3, 5, 36, 0), (4, 5, 36, 0), (5, 5, 36, 0),"
            	    + "(6, 5, 36, 0), (7, 5, 36, 0), (8, 5, 36, 0), (9, 5, 36, 0), (10, 5, 36, 0),"
            	    + "(11, 5, 36, 0), (12, 5, 36, 0), (13, 5, 36, 0), (14, 5, 36, 0), (15, 5, 36, 0),"
            	    + "(16, 5, 36, 0), (17, 5, 36, 0), (18, 5, 36, 0), (19, 5, 36, 0), (20, 5, 36, 0),"
            	    + "(21, 5, 36, 0), (22, 5, 36, 0), (23, 5, 36, 0), (24, 5, 36, 0), (25, 5, 36, 0);");
            
            stmt.executeUpdate("INSERT INTO reservation (ReservationNumber, UserId, PaymentMethod, PaymentStatus, PaymentAmount, PaymentDate, ScheduleNumber) VALUES"
            	    + "(1, 'apple', '카드', true, 9500, '2023-12-11', 1),"
            	    + "(2, 'banana', '현금결제', true, 9700, '2023-12-18', 4),"
            	    + "(3, 'orange', '계좌이체', true, 9800, '2023-12-15', 7),"
            	    + "(4, 'grape', '카드', true, 9600, '2023-12-20', 10),"
            	    + "(5, 'strawberry', '현금결제', true, 9900, '2023-12-20',13),"
            	    + "(6, 'pineapple', '계좌이체', true, 9700, '2023-12-16', 16),"
            	    + "(7, 'watermelon', '카드', true, 9800, '2023-12-10', 19),"
            	    + "(8, 'kiwi', '현금결제', true, 9500, '2023-12-16', 22),"
            	    + "(9, 'peach', '계좌이체', true, 9600, '2023-12-20', 25),"
            	    + "(10, 'cherry', '카드', true, 9700, '2023-12-21', 28),"
            	    + "(11, 'melon', '현금결제', true, 9800, '2023-12-21', 31),"
            	    + "(12, 'blueberry', '계좌이체', true, 9900, '2023-12-22', 34);");
            
            stmt.executeUpdate("INSERT INTO `db1`.`ticket` "
            		+ "(`TicketNumber`, `ScheduleNumber`, `TheaterNumber`, `SeatNumber`, `ReservationNumber`, `IssuanceStatus`, `StandardPrice`, `SellingPrice`) "
            		+ "VALUES "
            		+ "(1, 1, 6, 1, 1, FALSE, 10000, 9500),"
            		+ "(2, 4, 9, 1, 2, FALSE, 10000, 9700),"
            		+ "(3, 7, 12, 1, 3, FALSE, 10000, 9800),"
            		+ "(4, 10, 3, 1, 4, FALSE, 10000, 9600),"
            		+ "(5, 13, 6, 1, 5, FALSE, 10000, 9900),"
            		+ "(6, 16, 9, 1, 6, FALSE, 10000, 9700),"
            		+ "(7, 19, 12, 1, 7, FALSE, 10000, 9800),"
            		+ "(8, 22, 3, 1, 8, FALSE, 10000, 9500),"
            		+ "(9, 25, 6, 1, 9, FALSE, 10000, 9600),"
            		+ "(10, 28, 9, 1, 10, FALSE, 10000, 9700),"
            		+ "(11, 31, 12, 1, 11, FALSE, 10000, 9800),"
            		+ "(12, 34, 3, 1, 12, FALSE, 10000, 9900);");
            
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 6 AND ScheduleNumber = 1 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 9 AND ScheduleNumber = 4 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 12 AND ScheduleNumber = 7 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 3 AND ScheduleNumber = 10 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 6 AND ScheduleNumber = 13 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 9 AND ScheduleNumber = 16 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 12 AND ScheduleNumber = 19 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 3 AND ScheduleNumber = 22 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 6 AND ScheduleNumber = 25 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 9 AND ScheduleNumber = 28 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 12 AND ScheduleNumber = 31 AND SeatNumber = 1;");
            stmt.executeUpdate("UPDATE seat SET SeatAvailability = 1 WHERE TheaterNumber = 3 AND ScheduleNumber = 34 AND SeatNumber = 1;");



            return true; // 성공했을 때 true 반환
        } catch (SQLException e) {
            System.out.println("SQL 실행 오류");
            e.printStackTrace();
            return false; // 실패했을 때 false 반환
        }
    }
}
